<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
   Copyright 2011 Mark Mandel
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 -->
<xsd:schema xmlns="http://www.coldspringframework.org/schema/hibernate"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://www.coldspringframework.org/schema/hibernate"
			xmlns:beans="http://www.coldspringframework.org/schema/beans"
			elementFormDefault="qualified"
			attributeFormDefault="unqualified"
		>

	<xsd:import namespace="http://www.coldspringframework.org/schema/beans"
				schemaLocation="http://www.coldspringframework.org/schema/coldspring-beans-2.0.xsd"/>

	<xsd:annotation>
		<xsd:documentation><![CDATA[
	Configuration for wiring up the ORM configuration classes that are available with ColdSpring.
    ]]></xsd:documentation>
	</xsd:annotation>

	<xsd:element name="config">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation source="cfc:coldspring.orm.hibernate.SessionWrapper"><![CDATA[
			Provides a SessionWrapper under the id specified, with the strictTransaction mode, flush mode specified.
			Defining a autowire setting, will configure the appropriate BeanInjector, give it the appropriate id for a BeanInjectorEventHandler (usually hibernate-beanInjector)
			and pass it into the SessionWrapper as the BeanInjector to use on new().
			Defining an autowire session will also add a ScopeBeanFactoryLocator to set the current BeanFactory into the application scope.
			To overwrite the default application name, use the factory-name attribute.
			]]></xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:attribute name="strictTransaction" type="xsd:boolean" default="false">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
							Enable strict transactions on the underlying SessionWrapper.
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>