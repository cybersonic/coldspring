<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
   Copyright 2011 Mark Mandel
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 -->
<xsd:schema xmlns="http://www.coldspringframework.org/schema/tx"
			xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="http://www.coldspringframework.org/schema/tx"
			xmlns:beans="http://www.coldspringframework.org/schema/beans"
			elementFormDefault="qualified"
			attributeFormDefault="unqualified"
		>

	<xsd:import namespace="http://www.coldspringframework.org/schema/beans"
				schemaLocation="http://www.coldspringframework.org/schema/coldspring-beans-2.0.xsd"/>

	<xsd:annotation>
		<xsd:documentation><![CDATA[
        Credits to the Spring Transaction Schema, version 3.0, on which this is based.

        Defines the configuration elements for the ColdSpring Framework's Transaction support.
    ]]></xsd:documentation>
	</xsd:annotation>

	<xsd:element name="advice">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation source="cfc:coldspring.transaction.interceptor.TransactionInterceptor"><![CDATA[
			Creates an TransactionInterceptor, to be used to apply AOP based Transaction advice.
				]]></xsd:documentation>
			</xsd:annotation>
			<xsd:complexContent>
				<xsd:extension base="beans:identifiedType">
					<xsd:attribute name="order" type="xsd:integer" use="optional">
						<xsd:annotation>
							<xsd:documentation><![CDATA[
								Return the order value of this object, with a higher value meaning greater in terms of sorting.
								Higher values can be interpreted as lower priority. As a consequence, the object with the lowest value has highest priority.
							]]></xsd:documentation>
						</xsd:annotation>
					</xsd:attribute>
					<xsd:attribute name="isolation" use="optional">
						<xsd:simpleType>
							<xsd:annotation>
								<xsd:documentation>
						The transaction isolation level.
								</xsd:documentation>
							</xsd:annotation>
							<xsd:restriction base="xsd:NMTOKEN">
								<xsd:enumeration value="read_uncommitted" />
								<xsd:enumeration value="read_committed" />
								<xsd:enumeration value="repeatable_read" />
								<xsd:enumeration value="serializable" />
							</xsd:restriction>
						</xsd:simpleType>
					</xsd:attribute>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

</xsd:schema>