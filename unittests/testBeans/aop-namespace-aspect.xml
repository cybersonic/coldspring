<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2010 Mark Mandel
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<beans xmlns="http://www.coldspringframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.coldspringframework.org/schema/aop" 
	xsi:schemaLocation="http://www.coldspringframework.org/schema/beans http://coldspringframework.org/schema/coldspring-beans-2.0.xsd 
	http://www.coldspringframework.org/schema/aop http://www.coldspringframework.org/schema/coldspring-aop-2.0.xsd ">
	
	<aop:config>
		<aop:pointcut expression="!target(unittests.aop.com.sub.Hello) AND @target(dostuff)" id="notSubHello"/>
		
		<aop:advisor advice-ref="exceptionStorage" pointcut-ref="notSubHello"/>
		
		<aop:aspect ref="reverse">
			<aop:around id="reverseAdvice" method="$reverse" pointcut="@annotation(dostuff='true') AND @within(unittests.aop.com.*)" />
			<aop:around id="reverseAdviceNotUsed" method="$reverse" pointcut="@annotation(dostuff='true') AND @within(unittests.aop.com.*)" autoproxy="false"/>
		</aop:aspect>
		
		<aop:aspect ref="storage">
			<aop:pointcut expression="target(unittests.aop.com.Hello) AND @target(dostuff)" id="anotherPointcut"/>
			<aop:before method="storeArgs" pointcut-ref="notSubHello" />
			<aop:after-returning id="afterReturnStorage" method="storeReturn" pointcut-ref="notSubHello" />
			<aop:after-throwing method="storeException" pointcut-ref="anotherPointcut" />
		</aop:aspect>
		
		<aop:aspect ref="notStorage">
			<aop:pointcut expression="target(unittests.aop.com.Hello) AND @target(dostuff)" id="notAnotherPointcut"/>
			<aop:before method="storeArgs" pointcut-ref="notSubHello" autoproxy="false" />
			<aop:after-returning method="storeReturn" pointcut-ref="notSubHello" autoproxy="false" />
			<aop:after-throwing method="storeException" pointcut-ref="notAnotherPointcut" autoproxy="false" />
		</aop:aspect>
		
	</aop:config>
	
	<bean id="reverse" class="unittests.aop.com.Reverse" />
	<bean id="hello" class="unittests.aop.com.Hello"/>
	
	<bean id="helloNotWork" class="unittests.aop.com.sub.Hello"/>
	
	<bean id="storage" class="unittests.aop.com.Storage"/>
	<bean id="notStorage" class="unittests.aop.com.Storage"/>
	
	<bean id="exceptionStorage" class="unittests.aop.com.ExceptionStoreThrowsAdvice" /> 
	
	<bean id="helloWithProperty" class="unittests.aop.com.Hello" scope="request">
		<property name="Foo" value="Han Solo"/>
	</bean>
	
</beans>